{
    "swagger": "2.0",
    "info": {
        "description": "Boilerplate code for an Echo API",
        "title": "Echo Boilerplate",
        "contact": {
            "name": "DLzer",
            "url": "https://github.com/Dlzer"
        },
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/users": {
            "get": {
                "description": "Accepts pagination query parameters, and returns a list of Users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user list",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "page",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "size",
                        "description": "number of elements per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "orderBy",
                        "description": "filter name",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Accepts a user create model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Creates a User",
                "parameters": [
                    {
                        "description": "User",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "get": {
                "description": "Accepts a user name as a query param, performs a tsvector search and returns a list of matches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Performs a TSVector Search",
                "parameters": [
                    {
                        "type": "string",
                        "format": "name",
                        "description": "filter name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Accepts a UUID as a query parameter, and returns the User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Accepts a user to update, responds with the updated users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "A user",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Accepts a user UUID as a path parameter, and returns a true or false body.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Deletes a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.User": {
            "description": "User base model with Roles array",
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "example": "2024-01-01 00:01:22"
                },
                "deleted_date": {
                    "type": "string",
                    "example": "2024-01-01 00:01:22"
                },
                "email": {
                    "type": "string",
                    "example": "someuser@name.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Geoff"
                },
                "is_deleted": {
                    "type": "boolean",
                    "example": false
                },
                "last_name": {
                    "type": "string",
                    "example": "Goldblum"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[USER]"
                    ]
                },
                "updated": {
                    "type": "string",
                    "example": "2024-01-01 00:01:22"
                },
                "uuid": {
                    "type": "string",
                    "example": "adcce0b7-0b38-4bd3-bfa1-d9bf7c4c79b4"
                }
            }
        },
        "models.UserCreate": {
            "description": "User Create Model",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "someuser@name.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Geoff"
                },
                "last_name": {
                    "type": "string",
                    "example": "Goldblum"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[USER]"
                    ]
                },
                "uuid": {
                    "type": "string",
                    "example": "adcce0b7-0b38-4bd3-bfa1-d9bf7c4c79b4"
                }
            }
        }
    }
}