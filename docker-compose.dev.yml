version: "3.8"

services:
  web:
    container_name: api
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "5555:5555"
      - "7070:7070"
    environment:
      - PORT=5000
    restart: always
    volumes:
      - ./:/app
    networks:
      - web_api

  prometheus:
    container_name: prometheus_container
    image: prom/prometheus
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    networks:
      - web_api

  node_exporter:
    container_name: node_exporter_container
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks:
      - web_api

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - '3000:3000'
    networks:
      - web_api


  jaeger:
    container_name: jaeger_container
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 16685:16685
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      - web_api


networks:
  web_api:
    driver: bridge